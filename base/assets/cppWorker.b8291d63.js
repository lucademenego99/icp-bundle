(function(){"use strict";class p extends Error{constructor(t){super(`process exited with code ${t}.`),this.code=t}}class b extends Error{constructor(t,e){super(`${t}.${e} not implemented.`)}}class k extends Error{constructor(t="abort"){super(t)}}class M extends Error{constructor(t){super(t)}}function _(n,t,e=-1){let s="",i=n.length;e!=-1&&(i=t+e);for(let r=t;r<i&&n[r]!=0;++r)s+=String.fromCharCode(n[r]);return s}function d(n){if(!n)throw new M("assertion failed.")}function f(n,t=[]){const e={};for(let s of t)e[s]=n[s].bind(n);return e}function u(n,t){return((t-n)/1e3).toFixed(2)}const c=0,U=789514;class x{constructor(t){this.memory=t,this.buffer=this.memory.buffer,this.u8=new Uint8Array(this.buffer),this.u32=new Uint32Array(this.buffer)}check(){this.buffer.byteLength===0&&(this.buffer=this.memory.buffer,this.u8=new Uint8Array(this.buffer),this.u32=new Uint32Array(this.buffer))}read8(t){return this.u8[t]}read32(t){return this.u32[t>>2]}write8(t,e){this.u8[t]=e}write32(t,e){this.u32[t>>2]=e}write64(t,e,s=0){this.write32(t,e),this.write32(t+4,s)}readStr(t,e){return _(this.u8,t,e)}writeStr(t,e){return t+=this.write(t,e),this.write8(t,0),e.length+1}write(t,e){return e instanceof ArrayBuffer?this.write(t,new Uint8Array(e)):typeof e=="string"?this.write(t,e.split("").map(s=>s.charCodeAt(0))):(new Uint8Array(this.buffer,t,e.length).set(e),e.length)}}class W{constructor(t,e,s,...i){this.argv=[s,...i],this.environ={USER:"alice"},this.memfs=e,this.allowRequestAnimationFrame=!0,this.handles=new Map,this.nextHandle=0;const r=f(this),o=f(this,["proc_exit","environ_sizes_get","environ_get","args_sizes_get","args_get","random_get","clock_time_get","poll_oneoff"]);Object.assign(o,this.memfs.exports),this.ready=WebAssembly.instantiate(t,{wasi_unstable:o,env:r}).then(h=>{this.exports=h.exports,this.mem=new x(this.exports.memory),this.memfs.hostMem=this.mem})}async run(){await this.ready;try{this.exports._start()}catch(t){let e=!0;if(t instanceof p){if(t.code===U)return console.log("Allowing rAF after exit."),!0;if(console.log(`Disallowing rAF since exit code is ${t.code}.`),this.allowRequestAnimationFrame=!1,t.code==0)return!1;e=!1}let s=`\x1B[91mError: ${t.message}`;throw e&&(s=s+`
${t.stack}`),s+=`\x1B[0m
`,this.memfs.hostWrite(s),t}}proc_exit(t){throw new p(t)}environ_sizes_get(t,e){this.mem.check();let s=0;const i=Object.getOwnPropertyNames(this.environ);for(const r of i){const o=this.environ[r];s+=r.length+o.length+2}return this.mem.write64(t,i.length),this.mem.write64(e,s),c}environ_get(t,e){this.mem.check();const s=Object.getOwnPropertyNames(this.environ);for(const i of s)this.mem.write32(t,e),t+=4,e+=this.mem.writeStr(e,`${i}=${this.environ[i]}`);return this.mem.write32(t,0),c}args_sizes_get(t,e){this.mem.check();let s=0;for(let i of this.argv)s+=i.length+1;return this.mem.write64(t,this.argv.length),this.mem.write64(e,s),c}args_get(t,e){this.mem.check();for(let s of this.argv)this.mem.write32(t,e),t+=4,e+=this.mem.writeStr(e,s);return this.mem.write32(t,0),c}random_get(t,e){const s=new Uint8Array(this.mem.buffer,t,e);for(let i=0;i<e;++i)s[i]=Math.random()*256|0}clock_time_get(t,e,s){throw new b("wasi_unstable","clock_time_get")}poll_oneoff(t,e,s,i){throw new b("wasi_unstable","poll_oneoff")}}class ${constructor(t){this.hostWrite=t.hostWrite,this.logHostWrite=t.logHostWrite,this.baseUrl=t.baseUrl||"",this.stdinStr=t.stdinStr||"",this.stdinStrPos=0,this.hostMem_=null;const e=f(this,["abort","host_write","host_read","memfs_log","copy_in","copy_out"]);this.ready=fetch(this.baseUrl+"memfs.wasm").then(s=>s.arrayBuffer()).then(async s=>{const i=await WebAssembly.compile(s),r=await WebAssembly.instantiate(i,{env:e});this.exports=r.exports,this.mem=new x(this.exports.memory),this.exports.init()})}set hostMem(t){this.hostMem_=t}setStdinStr(t){this.stdinStr=t,this.stdinStrPos=0}addDirectory(t){this.mem.check(),this.mem.write(this.exports.GetPathBuf(),t),this.exports.AddDirectoryNode(t.length)}addFile(t,e){const s=e instanceof ArrayBuffer?e.byteLength:e.length;this.mem.check(),this.mem.write(this.exports.GetPathBuf(),t);const i=this.exports.AddFileNode(t.length,s),r=this.exports.GetFileNodeAddress(i);this.mem.check(),this.mem.write(r,e)}getFileContents(t){this.mem.check(),this.mem.write(this.exports.GetPathBuf(),t);const e=this.exports.FindNode(t.length),s=this.exports.GetFileNodeAddress(e),i=this.exports.GetFileNodeSize(e);return new Uint8Array(this.mem.buffer,s,i)}abort(){throw new k}host_write(t,e,s,i){this.hostMem_.check(),d(t<=2);let r=0,o="";for(let h=0;h<s;++h){const m=this.hostMem_.read32(e);e+=4;const a=this.hostMem_.read32(e);e+=4,o+=this.hostMem_.readStr(m,a),r+=a}return this.hostMem_.write32(i,r),this.hostWrite(o),this.logHostWrite(o),c}host_read(t,e,s,i){this.hostMem_.check(),d(t===0);let r=0;for(let o=0;o<s;++o){const h=this.hostMem_.read32(e);e+=4;const m=this.hostMem_.read32(e);e+=4;const a=Math.min(m,this.stdinStr.length-this.stdinStrPos);if(a===0||(this.hostMem_.write(h,this.stdinStr.substr(this.stdinStrPos,a)),r+=a,this.stdinStrPos+=a,a!==m))break}return this.hostMem_.write32(i,r),c}memfs_log(t,e){this.mem.check(),console.log(this.mem.readStr(t,e))}copy_out(t,e,s){this.hostMem_.check();const i=new Uint8Array(this.hostMem_.buffer,t,s);this.mem.check();const r=new Uint8Array(this.mem.buffer,e,s);i.set(r)}copy_in(t,e,s){this.mem.check();const i=new Uint8Array(this.mem.buffer,t,s);this.hostMem_.check();const r=new Uint8Array(this.hostMem_.buffer,e,s);i.set(r)}}class F{constructor(t){this.u8=new Uint8Array(t),this.offset=0}readStr(t){const e=_(this.u8,this.offset,t);return this.offset+=t,e}readOctal(t){return parseInt(this.readStr(t),8)}alignUp(){this.offset=this.offset+511&-512}readEntry(){if(this.offset+512>this.u8.length)return null;const t={filename:this.readStr(100),mode:this.readOctal(8),owner:this.readOctal(8),group:this.readOctal(8),size:this.readOctal(12),mtim:this.readOctal(12),checksum:this.readOctal(8),type:this.readStr(1),linkname:this.readStr(100)};return this.readStr(8)!=="ustar  "?null:(t.ownerName=this.readStr(32),t.groupName=this.readStr(32),t.devMajor=this.readStr(8),t.devMinor=this.readStr(8),t.filenamePrefix=this.readStr(155),this.alignUp(),t.type==="0"?(t.contents=this.u8.subarray(this.offset,this.offset+t.size),this.offset+=t.size,this.alignUp()):t.type!=="5"&&(console.log("type",t.type),d(!1)),t)}untar(t){let e;for(;e=this.readEntry();)switch(e.type){case"0":t.addFile(e.filename,e.contents);break;case"5":t.addDirectory(e.filename);break}}}class L{constructor(t){this.moduleCache={},this.hostWrite=t.hostWrite,this.logHostWrite=t.logHostWrite,this.baseUrl=t.baseUrl||"",this.showLogs=t.showLogs||!1,this.showTiming=t.showTiming||!1,this.clangCommonArgs=["-disable-free","-isysroot","/","-internal-isystem","/include/c++/v1","-internal-isystem","/include","-internal-isystem","/lib/clang/8.0.1/include","-ferror-limit","19","-fmessage-length","80","-fcolor-diagnostics"],this.memfs=new $({hostWrite:this.hostWrite,logHostWrite:this.logHostWrite,baseUrl:this.baseUrl}),this.ready=this.memfs.ready.then(()=>this.untar(this.memfs,this.baseUrl+"sysroot.tar"))}async getModule(t){if(this.moduleCache[t])return this.moduleCache[t];const e=await this.hostLogAsync(`Fetching and compiling ${t}`,(async()=>{const s=await fetch(t);return WebAssembly.compile(await s.arrayBuffer())})());return this.moduleCache[t]=e,e}hostLog(t){this.showLogs&&this.logHostWrite(`${t}`)}async hostLogAsync(t,e){const s=+new Date;this.logHostWrite(`${t}...`);const i=await e,r=+new Date;if(this.showLogs&&this.logHostWrite(" done."),this.showTiming){const o="\x1B[92m",h="\x1B[0m";this.hostWrite(` ${o}(${u(s,r)}s)${h}`)}return i}async untar(t,e){await this.memfs.ready;const s=(async()=>{new F(await fetch(e).then(r=>r.arrayBuffer())).untar(this.memfs)})();await this.hostLogAsync(`Untarring ${e}`,s)}async compile(t){const e=t.input,s=t.contents,i=t.obj;t.opt,await this.ready,this.memfs.addFile(e,s);const r=await this.getModule(this.baseUrl+"clang.wasm");return await this.run(r,"clang","-cc1","-emit-obj",...this.clangCommonArgs,"-O2","-o",i,"-x","c++",e)}async link(t,e){const i="lib/wasm32-wasi",r=`${i}/crt1.o`;await this.ready;const o=await this.getModule(this.baseUrl+"lld.wasm");return await this.run(o,"wasm-ld","--no-threads","--export-dynamic","-z",`stack-size=${1048576}`,`-L${i}`,r,t,"-lc","-lc++","-lc++abi","-o",e)}async run(t,...e){this.hostLog(`${e.join(" ")}`);const s=+new Date,i=new W(t,this.memfs,...e),r=+new Date,o=await i.run(),h=+new Date;if(this.showTiming){const m="\x1B[92m",a="\x1B[0m";let A=`${m}(${u(s,r)}s`;A+=`/${u(r,h)}s)${a}`,this.hostWrite(A)}return o?i:null}async compileLinkRun(t){const e="test.cc",s="test.o",i="test.wasm";await this.compile({input:e,contents:t,obj:s}),await this.link(s,i);const r=this.memfs.getFileContents(i),o=await WebAssembly.compile(r);return await this.run(o,i)}}let l,w=!0,g=[],y=[];const S={showLogs:!0,hostWrite(n){y.push(n)},logHostWrite(n){n=n.replace(/\x1b\[[0-9;]*m/g,""),n.length>2&&g.push(n)}};onconnect=async n=>{const t=n.ports[0];t.addEventListener("message",e);async function e(s){if(!w){s.data.type!="init"&&t.postMessage({error:"Runtime is initializing. Please retry in a few seconds. Some dependencies must be downloaded."});return}y=[],g=[],w=!1;try{s.data.type==="init"&&!l?(S.baseUrl=s.data.baseUrl,l=new L(S),await l.compileLinkRun("int main() { return 0; }")):(await l.compileLinkRun(s.data.script),t.postMessage({debug:y.join(`
`)}))}catch{t.postMessage({error:g.join(`
`)})}w=!0}t.start()}})();
