(function(){"use strict";let n=[],p="",r=!1,l=!1,o;onconnect=async g=>{const a=g.ports[0];a.addEventListener("message",h);async function h(s){if(s.data.type==="init"&&!r)importScripts(s.data.baseUrl+"pyodide.js"),o=await loadPyodide({stdin:()=>p,stdout:e=>{l?n.push(e):e.includes("Python initialization complete")&&(l=!0)},stderr:e=>{l?n.push(e):e.includes("Python initialization complete")&&(l=!0)}}),r=!0;else{if(!r){a.postMessage({error:"The runtime is still initializing. Please wait a few seconds and try again.",line:0});return}n=[],p=s.data.input;try{o.globals.clear(),await o.loadPackagesFromImports(s.data.script);let e=await o.runPythonAsync(s.data.script),i=n.join(`
`);i.length>1e5&&(i=i.substring(0,1e5)+"..."),n=[],a.postMessage({debug:i,result:e})}catch(e){e=m(e),a.postMessage({error:e.message,line:e.deepest.line+1})}}}function m(s){const e=[];let i,u="";if(s.message){if(s.message.indexOf("Traceback")>=0){const c=/File\s*"(\S*?)",\s*line\s*(\d*),\s*in\s*(\S.*)|File\s*"(\S*?)",\s*line\s*(\d*)/gm;let t;for(;(t=c.exec(s.message))!==null;)t.index===c.lastIndex&&c.lastIndex++,t.length>=4&&(t[2]&&t[1]&&t[3]?e.push({line:parseInt(t[2])-1,file:t[1],module:t[3]}):t[4]&&t[5]&&e.push({line:parseInt(t[5])-1,file:t[4]}));i=e.reverse().find(f=>f.file==="<exec>"||f.file==="<unknown>")}const d=s.message.trim().split(`
`);d.length>0&&(u=d[d.length-1])}return{message:u,trace:e,deepest:i}}a.start()}})();
